#! /bin/sh
# prerm script for vzctl
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <prerm> `remove'
#        * <old-prerm> `upgrade' <new-version>
#        * <new-prerm> `failed-upgrade' <old-version>
#        * <conflictor's-prerm> `remove' `in-favour' <package> <new-version>
#        * <deconfigured's-prerm> `deconfigure' `in-favour'
#          <package-being-installed> <version> `removing'
#          <conflicting-package> <version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package


case "$1" in
    remove)
        # This is a fix to make sure to avoid killing the own ve in case
        # vzctl has been installed inside the ve by mistake.
        if [ ! -e /dev/vzctl ] && [ -e /proc/vz/veinfo ] ; then
	    # Make additional checks to make sure we are inside a ve.
	    # Only ve0 can have more than one line.
	    if [ "$(wc -l /proc/vz/veinfo | sed -e 's|^ *||;s| .*||;')" = "1" ] ; then
		# And only ve0 have id 0
		if [ "$(cat /proc/vz/veinfo | sed -e 's|^ *||;s| .*||;')" != "0" ] ; then
		    echo "Ignore stopping the ve as we are inside the container."
		    exit 0
		fi
	    fi
	fi
        # End of fix.
    	if [ -x "/etc/init.d/vz" ]; then
	    if [ -x /usr/sbin/invoke-rc.d ] ; then
		invoke-rc.d vz stop || true
	    else
		/etc/init.d/vz stop || true
	    fi
	fi
    	if [ -x "/etc/init.d/vz" ]; then
	    if [ -x /usr/sbin/invoke-rc.d ] ; then
		invoke-rc.d vzeventd stop || true
	    else
		/etc/init.d/vzeventd stop || true
	    fi
	fi
        ;;
    upgrade|deconfigure)
        ;;
    failed-upgrade)
        ;;
    *)
        echo "prerm called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
